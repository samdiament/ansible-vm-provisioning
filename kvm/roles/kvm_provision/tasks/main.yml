---
# tasks file for kvm_provision
- name: Ensure requirements in place
  package:
    name:
      - guestfs-tools
      - python3-libvirt
    state: present
  become: yes

- name: Get list of VMs
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: no

- name: Create VM if not exists
  block:

    - name: Copy base image to libvirt directory
      copy:
        dest: "{{ libvirtPoolDir }}/{{ vmName }}.qcow2"
        src: "/{{ libvirtPoolDir }}/{{ baseImageName }}"
        force: no
        remote_src: yes 
        mode: 0660
      register: copy_results

    - name: Configure the image
      command: |
        virt-customize -a {{ libvirtPoolDir }}/{{ vmName }}.qcow2 \
        --hostname {{ vmName }} \
        --root-password password:{{ vmRootPass }} \
        --ssh-inject 'root:file:{{ sshKey }}' \
        --uninstall cloud-init --selinux-relabel
      when: copy_results is changed

    - name: Define vm
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'vm-template.xml.j2') }}"
    
  when: "vm_name not in existing_vms.list_vms"

  - name: Ensure VM is started
    community.libvirt.virt:
      name: "{{ vmName }}"
      state: running
    register: vm_start_results
    until: "vm_start_results is success"
    retries: 15
    delay: 2
